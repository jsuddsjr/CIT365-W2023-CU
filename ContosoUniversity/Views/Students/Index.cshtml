@model PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Index";

    var pageSizes = new SelectList(new[] { 3, 10, 25 }, ViewData["pageSize"]);
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form class="form-inline mb-3" asp-action="Index" method="get">
    <div class="input-group col-sm-6 flex-nowrap">
        <input class="form-control flex-shrink-0" type="text" id="SearchString" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search by name" title="Search by name" >
        <div class="btn-group input-group-append">
            <input type="submit" value="Search" class="btn btn-primary" >
            <a class="btn btn-outline-secondary" asp-action="Index" asp-route-pageSize="@ViewData["pageSize"]">Clear</a>
        </div>
    </div>
    <div class="input-group col-sm-6 col-lg-4 flex-nowrap">
        <label class="input-group-text" for="pageSize">Page size</label>
        <select class="form-control" id="pageSize" name="pageSize" asp-items="pageSizes" onchange="this.form.submit()"></select>
    </div>
</form>

<div class="table-responsive-lg">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
                </th>
                <th>
                    First Name
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Enrollment Date</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstMidName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EnrollmentDate)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>
